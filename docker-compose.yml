services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./files:/app/files
    environment:
      - FLASK_APP=src.app
      - FLASK_ENV=development
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=document_classifier
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - S3_ENDPOINT_URL=http://localstack:4566
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A src.tasks worker --loglevel=info
    volumes:
      - ./src:/app/src
      - ./files:/app/files
    environment:
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=document_classifier
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - S3_ENDPOINT_URL=http://localstack:4566
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
      web:
        condition: service_started

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=document_classifier
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
      - "4571:4571"
    environment:
      - SERVICES=s3
      - DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LOCALSTACK_TMPDIR=/tmp/localstack_tmp
      - DEBUG=1
    volumes:
      - ./files:/files
      - "./localstack_data:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

volumes:
  postgres_data:
  redis_data:
  localstack_data:

networks:
  default:
    driver: bridge